html
    head 
        title=title + " | Schema"
        link(rel="icon", href=image_url)
        link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css")
        script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js") 
        link(rel="stylesheet" href="/css/styles.css")

    body(style='background-image: url(' + background_image_url + ');')
        //- Navigation
        nav.navbar.navbar-expand-lg.bg-body-tertiary
            div.container
                a.navbar-brand(href="/")
                    img(src=image_url alt=image_alt height="30" width="auto")
                    p(style="display: inline; margin-left: 10px; vertical-align: middle;")=title
                button.navbar-toggler(type="button" data-bs-toggle="collapse" data-bs-target="#cmsNav" aria-controls="cmsNav" aria-expanded="false" aria-label="Toggle navigation")
                    span.navbar-toggler-icon
                div.collapse.navbar-collapse#cmsNav
                    ul.navbar-nav
                        li.nav-item
                            a.nav-link.active(aria-current="page" href="/") Dashboard
                        li.nav-item.dropdown 
                            a.nav-link.dropdown-toggle(href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false") Content 
                            ul.dropdown-menu 
                                li 
                                    a.dropdown-item(href="/view-content") View Content 
                                li
                                    a.dropdown-item(href="/create-content") Create Content 
                                li 
                                    hr.dropdown-divider
                                li 
                                    a.dropdown-item(href="/view-projects") View Projects 
                                li 
                                    a.dropdown-item(href="/create-project") Create Projects
                        li.nav-item
                            a.nav-link(href="/manage-cdn") CDN
                        li.nav-item
                            a.nav-link(href="#") Profile
                        if admin == true
                            li.nav-item.dropdown
                                a.nav-link.dropdown-toggle(href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false") Admin
                                ul.dropdown-menu
                                    li
                                        a.dropdown-item(href="/admin/categories") Categories
                                    li
                                        a.dropdown-item(href="/admin/create-category") Create Category
                                    li
                                        a.dropdown-item(href="/admin/api-keys") API Keys
                                    li
                                        hr.dropdown-divider
                                    li
                                    a.dropdown-item(href="/admin/users") Users
                        li.nav-item
                            a.nav-link.text-danger.active(href="/login/logout") Log Out

        div.row.g-0.justify-content-center

            //- Content Container
            div.container.col-md-8.col-10.__admin_content
                div.mt-5
                    div.__admin_header_container
                    div.__admin_header
                        h1.text-center.mt-2 New Category
                        p#counter
                        p.w-100.text-center.text-muted Categories separate your content
                    div.__admin_heading
                        div.row.justify-content-center.g-0
                            form.col-10#NewCategoryForm(action="/admin/create-category" method="POST")
                                input#AttributeCounter(type="hidden" value="1" readonly)
                                div.mb-5
                                    label.form-label(for="CategoryName") Category Name 
                                    input.form-control#CategoryName(type="text" name="CategoryName" required)

                                div.row.justify-content-center 
                                    button.btn#AddAttributeButton Add Attribute
                                    button.btn.__category_submit_button(type="submit") Submit
                                
                                div#AttributeList

        script.

            document.getElementById('AddAttributeButton').addEventListener('click', function(e){
                e.preventDefault();
                addAttribute();
            });

            //- Add Attribute to form
            //- Dynamically assigns depending on the number of attributes that have been added
            //- Utilizes a hidden input to keep the names from clashing
            //- Dynamically creates remove event listener
            function addAttribute() {
                //- Get hidden counter
                var counter = document.getElementById("AttributeCounter")
                var form = document.getElementById("AttributeList")
                //- Input container Creation
                var attributeDiv = document.createElement("div")
                attributeDiv.classList.add("mb-3")
                attributeDiv.setAttribute("id", "Attribute" + counter.value)
                //- Delete Button Creation
                var deleteButton = document.createElement("button")
                deleteButton.setAttribute("id", "AttributeDeleteButton" + counter.value)
                deleteButton.setAttribute("style", "margin-right: .5rem;")
                deleteButton.addEventListener('click', function (event) {
                    event.preventDefault();
                    this.parentNode.remove(this);
                })
                deleteButton.classList.add('__icon')
                deleteButton.classList.add('__delete_icon')
                var deleteButtonIcon = document.createElement("img")
                deleteButtonIcon.setAttribute("src", "/images/icons/trash.png")
                deleteButtonIcon.setAttribute("width", "20")
                deleteButtonIcon.setAttribute("Height", "20")
                deleteButton.appendChild(deleteButtonIcon)
                //- Title Label Creation
                var titleLabel = document.createElement("label")
                titleLabel.classList.add("form-label")
                titleLabel.textContent = "Attribute Title"
                //- Title Input Creation
                var titleInput = document.createElement("input")
                titleInput.classList.add("form-control")
                titleInput.setAttribute('onchange', "checkIfAttributeEmpty('titleInput" + counter.value + "');")
                titleInput.name = "titleInput" + counter.value
                titleInput.id = "titleInput" + counter.value
                titleInput.required = true
                //- Type Label Creation
                var typeLabel = document.createElement("label")
                typeLabel.classList.add("form-label")
                typeLabel.textContent = "Attribute Type"
                //- Type Input Creation
                var typeInput = document.createElement("select")
                typeInput.classList.add("form-select")
                typeInput.name = "typeInput" + counter.value
                typeInput.required = true
                //- Type Options Creation
                //- Adds directly to the Type Input
                var typeArray = [
                    {
                        name: "Short Text",
                        value: "short_text"
                    },
                    {
                        name: "Long Text",
                        value: "long_text"
                    },
                    {
                        name: "Reference",
                        value: "reference"
                    },
                    {
                        name: "Date",
                        value: "date"
                    },
                    {
                        name: "Image",
                        value: "image"
                    }
                ];
                typeArray.map((type) => {
                    var newOption = document.createElement('option');
                    newOption.value = type.value;
                    newOption.textContent = type.name;
                    typeInput.appendChild(newOption);
                })
                //- Element Nesting
                attributeDiv.appendChild(deleteButton)
                attributeDiv.appendChild(titleLabel)
                attributeDiv.appendChild(titleInput)
                attributeDiv.appendChild(typeLabel)
                attributeDiv.appendChild(typeInput)
                //- Element Injection
                form.appendChild(attributeDiv)

                //- Increase Counter
                counter.value = parseInt(counter.value) + 1
            }